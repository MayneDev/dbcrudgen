<?php 

	namespace database\modules;

	use database\crud\${TABLE_CLASS};

	/**
	*  
	*	${CLASS_NAME}
	*  
	* Provides High level features for interacting with the ${TABLE_CLASS};
	*
	* This source code is auto-generated
    *
    * @author Victor Mwenda
    * Email : vmwenda.vm@gmail.com
    * Phone : +254(0)718034449
	*/
	class ${CLASS_NAME}{

	private $build;
	private $client;
	private $action;
	private $${TABLE_NAME};
	private $table = '${TABLE_NAME}';
	/**
	 * ${CLASS_NAME}
	 * 
	 * Class to get all the ${TABLE_NAME} Information from the ${TABLE_NAME} table 
	 * @param String $action
	 * @param String $client
	 * @param String $build
	 * 
	 * @author Victor Mwenda
	 * Email : vmwenda.vm@gmail.com
	 * Phone : +254718034449
	 */
	public function __construct($action = "query", $client = "mobile-android",$build="user-build") {

		$this->client = $client;
		$this->action = $action;
		$this->build = $build;
		
		$this->${TABLE_NAME} = new ${TABLE_CLASS}( $action, $client );

	}

	

	${TABLE_PREPARED_INSERT_FUNCTION}

 	/**
     * @param $distinct
     * @param string $extraSQL
     * @return string
     */
	public function query($distinct,$extraSQL=""){

		$columns = $records = array ();
		$queried_${TABLE_NAME} = $this->${TABLE_NAME}->fetch_assoc_in_${TABLE_NAME} ($distinct, $columns, $records,$extraSQL );

		if($this->build == "eng-build"){
			return $this->query_eng_build($queried_${TABLE_NAME});
		}
		if($this->build == "user-build"){
			return $this->query_user_build($queried_${TABLE_NAME});
		}
	}
/**
     * Inserts records in a relation
     * The records are inserted in the relation columns in the order they are arranged in the array
     *
     * @param $records
     * @param bool $printSQL
     * @return bool|mysqli_result
     * @throws NullabilityException
     */
    public function insert_raw($records, $printSQL = false)
    {
        return $this->${TABLE_NAME}->insert_raw($records, $printSQL);
    }

    /**
     * Inserts records in a relation
     * The records are matched alongside the columns in the relation
         * @param array $columns
         * @param array $records
         * @param bool $redundancy_check
         * @param bool $printSQL
         * @return mixed
         */
        public function insert_records_to_${TABLE_NAME}(Array $columns, Array $records,$redundancy_check = false, $printSQL = false){
            return $this->${TABLE_NAME}->insert_records_to_${TABLE_NAME}($columns, $records,$redundancy_check,$printSQL);
        }

     /**
        * Performs a raw Query
        * @param $sql string sql to execute
        * @return string sql results
        * @throws \app\libs\marvik\libs\database\core\mysql\NullabilityException
        */
	public function rawQuery($sql){

		$queried_${TABLE_NAME} = $this->${TABLE_NAME}->get_database_utils()->rawQuery($sql);

		if($this->build == "eng-build"){
			return $this->query_eng_build($queried_${TABLE_NAME});
		}
		if($this->build == "user-build"){
			return $this->query_user_build($queried_${TABLE_NAME});
		}
	}

	public function query_eng_build($queried_${TABLE_NAME}){
		if($this->client == "web-desktop"){
			return $this->export_query_html($queried_${TABLE_NAME});
		}
		if($this->client == "mobile-android"){
			return $this->export_query_json($queried_${TABLE_NAME});
		}
	}
	public function query_user_build($queried_${TABLE_NAME}){
		if($this->client == "web-desktop"){
			return $this->export_query_html($queried_${TABLE_NAME});
		}
		if($this->client == "mobile-android"){
			return $this->export_query_json($queried_${TABLE_NAME});
		}
	}
	public function export_query_json($queried_${TABLE_NAME}){
		$query_json = json_encode($queried_${TABLE_NAME});
		return $query_json;
	}
	public function export_query_html($queried_${TABLE_NAME}){
		$query_html = "";
		foreach ( $queried_${TABLE_NAME} as $${TABLE_NAME}_row_items ) {
			$query_html .= $this->process_query_for_html_export ( $${TABLE_NAME}_row_items );
		}
		return $query_html;
	}

	private function process_query_for_html_export ( $${TABLE_NAME}_row_items ){
		$html_export ='<div style="padding:10px;margin:10px;border:2px solid black;"><h3>'  .$this->table.  '</h3>';
		
		${ROW_ITEMS_FETCH_ASSOC_VALUES_STATEMENTS}
		
		return $html_export .='</div>';
	}

	private function parseHtmlExport($title,$message){
		return '<div style="width:400px;"><h4>' . $title . '</h4><hr /><p>' . $message . '</p></div>';
	}
} ?>